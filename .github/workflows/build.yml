name: Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        
    - name: Create asset directories
      run: |
        mkdir -p assets/images
        mkdir -p assets/icons
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run tests
      run: flutter test --coverage
      
    - name: Run analysis
      run: flutter analyze
      
    - name: Format code
      run: dart format .
      
    - name: Check formatting
      run: dart format --set-exit-if-changed .
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: coverage/lcov.info
        fail_ci_if_error: false
        verbose: true
      continue-on-error: true
      
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage/lcov.info

  build-debug:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        
    - name: Create asset directories
      run: |
        mkdir -p assets/images
        mkdir -p assets/icons
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build debug APK
      run: flutter build apk --debug
      
    - name: Upload debug APK
      uses: actions/upload-artifact@v4
      with:
        name: call-blocker-debug-apk
        path: build/app/outputs/flutter-apk/app-debug.apk

  build-release:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.16.0'
        channel: 'stable'
        
    - name: Create asset directories
      run: |
        mkdir -p assets/images
        mkdir -p assets/icons
        
    - name: Install dependencies
      run: flutter pub get
      
    - name: Build release APK
      run: flutter build apk --release
      
    - name: Upload release APK
      uses: actions/upload-artifact@v4
      with:
        name: call-blocker-release-apk
        path: build/app/outputs/flutter-apk/app-release.apk
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: build/app/outputs/flutter-apk/app-release.apk
        tag_name: v${{ github.run_number }}
        name: Call Blocker v${{ github.run_number }}
        body: |
          ## Call Blocker Release v${{ github.run_number }}
          
          ### Changes
          - Automated build from GitHub Actions
          - Latest code from main branch
          
          ### Installation
          1. Download the APK file
          2. Enable "Install from unknown sources" on your Android device
          3. Install the APK
          4. Grant all required permissions
          
          ### Features
          - Automatic call blocking outside business hours
          - SMS auto-reply functionality
          - Customizable business schedule
          - Privacy-focused local data storage
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
